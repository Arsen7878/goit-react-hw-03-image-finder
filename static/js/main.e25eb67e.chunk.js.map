{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","js/fetchAPI.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","ImageGalleryItem","webformatURL","tags","src","alt","className","c","ImageGalleryItemImage","ImageGallery","images","onOpenModal","map","id","largeImageURL","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onCloseModal","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Overlay","Component","Searchbar","state","keyword","inputHandler","setState","value","toLowerCase","handleSubmit","preventDefault","trim","toast","onSubmit","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","fetchImagesAPI","page","URL","fetch","then","response","ok","json","Promise","reject","Error","Button","Loader","spiner","color","height","width","App","status","error","fetchImages","answer","total","hits","catch","formSubmitHandler","handlerOpenModal","URLImageLarge","handlerCloseModal","prevProps","prevState","handlerLoadMoreBtn","bind","length","autoClose","position","ReactDOM","render","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,yC,mBCAvFD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,sBAAwB,kD,mBCA1CD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,oLCgBZC,EAbU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACxC,OACE,mCACE,qBAAKC,IAAKF,EAAcG,IAAKF,EAAMG,UAAWC,IAAEC,2BC2BvCC,EA7BM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC9B,OACE,oBAAIL,UAAWC,IAAEE,aAAjB,SACGC,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMW,EAA3B,EAA2BA,cAA3B,OACV,oBAEER,UAAWC,IAAEN,iBACbc,QAAS,WACPJ,EAAYG,IAJhB,SAOE,cAAC,EAAD,CAAkBZ,aAAcA,EAAcC,KAAMA,KAN/CU,S,iBCLTG,EAAYC,SAASC,cAAc,eAEnCC,E,4MAcJC,cAAgB,SAAAC,GACC,WAAXA,EAAEC,MACJ,EAAKC,MAAMC,gB,EAIfC,oBAAsB,SAAAC,GAChBA,EAAMC,gBAAkBD,EAAME,QAChC,EAAKL,MAAMC,gB,uDAhBf,WACEK,OAAOC,iBAAiB,UAAWC,KAAKX,iB,kCAG1C,WACES,OAAOG,oBAAoB,UAAWD,KAAKX,iB,oBAe7C,WACE,IAAQN,EAAkBiB,KAAKR,MAAvBT,cAER,OAAOmB,uBACL,qBAAK3B,UAAWC,IAAE2B,QAASnB,QAASgB,KAAKN,oBAAzC,SACE,qBAAKnB,UAAWC,IAAEY,MAAlB,SACE,qBAAKf,IAAKU,EAAeT,IAAI,SAGjCW,O,GAnCcmB,aAwCLhB,I,uBCzCTiB,E,4MAKJC,MAAQ,CACNC,QAAS,I,EAGXC,aAAe,SAAAb,GACb,EAAKc,SAAS,CACZF,QAASZ,EAAME,OAAOa,MAAMC,iB,EAIhCC,aAAe,SAAAtB,GACb,qBAAQE,EAAR,EAAQA,MAAOc,EAAf,EAAeA,MAIf,GAFAhB,EAAEuB,iBAE2B,KAAzBP,EAAMC,QAAQO,OAChB,OAAOC,YAAM,mFAGfvB,EAAMwB,SAASV,GAEf,EAAKG,SAAS,CAAEF,QAAS,M,4CAG3B,WACE,IAAQK,EAA+BZ,KAA/BY,aAAcJ,EAAiBR,KAAjBQ,aACdD,EAAYP,KAAKM,MAAjBC,QACR,OACE,mCACE,wBAAQhC,UAAWC,IAAE6B,UAArB,SACE,uBAAM9B,UAAWC,IAAEyC,WAAYD,SAAUJ,EAAzC,UACE,wBAAQM,KAAK,SAAS3C,UAAWC,IAAE2C,iBAAnC,SACE,sBAAM5C,UAAWC,IAAE4C,sBAAnB,sBAGF,uBACE7C,UAAWC,IAAE6C,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUjB,EACVE,MAAOH,e,GA/CGH,aAwDTC,IChDAqB,MAdf,SAAwBnB,EAASoB,GAC/B,IACMC,EAAG,qCAAiCrB,EAAjC,iBAAiDoB,EAAjD,gBADO,qCACP,wDAET,OAAOE,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,mHAAiC7B,EAAjC,kE,iBCSS8B,EAdA,SAAC,GAAiB,IAAfrD,EAAc,EAAdA,QAChB,OACE,mCACE,wBAAQkC,KAAK,SAASlC,QAASA,EAAST,UAAWC,IAAE6D,OAArD,0B,kCCKSC,EARA,WACb,OACE,qBAAK/D,UAAWC,IAAE+D,OAAlB,SACE,cAAC,IAAD,CAAQrB,KAAK,eAAesB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QCI/DC,E,4MACJrC,MAAQ,CACNC,QAAS,GACTqC,OAAQ,OACRjE,OAAQ,GACRkE,MAAO,KACPlB,KAAM,G,EAaRmB,YAAc,WACZ,MAA0B,EAAKxC,MAAvBC,EAAR,EAAQA,QAASoB,EAAjB,EAAiBA,KAEjBD,EAAenB,EAASoB,GACrBG,MAAK,SAAAiB,GACiB,IAAjBA,EAAOC,MACT,EAAKvC,SAAS,CACZoC,MAAM,4GAAD,OAAyBtC,EAAzB,4DACLqC,OAAQ,aAGV,EAAKnC,UAAS,gBAAG9B,EAAH,EAAGA,OAAQgD,EAAX,EAAWA,KAAMpB,EAAjB,EAAiBA,QAAjB,MAAgC,CAC5C5B,OAAO,GAAD,mBAAMA,GAAN,YAAiBoE,EAAOE,OAC9BL,OAAQ,WACRjB,KAAMA,EAAO,EACbpB,iBAIL2C,OAAM,SAAAL,GAAK,OAAI,EAAKpC,SAAS,CAAEoC,QAAOD,OAAQ,iB,EAGnDO,kBAAoB,YAAkB,IAAf5C,EAAc,EAAdA,QACrB,EAAKE,SAAS,CACZF,UACAoB,KAAM,EACNkB,MAAO,KACPlE,OAAQ,M,EAWZyE,iBAAmB,SAAAC,GACjB,EAAK5C,SAAS,CACZ1B,cAAesE,K,EAInBC,kBAAoB,WAClB,EAAK7C,SAAS,CACZ1B,cAAe,M,wDAxDnB,SAAmBwE,EAAWC,GACXA,EAAUjD,UACVP,KAAKM,MAAMC,UAG1BP,KAAKS,SAAS,CAAEmC,OAAQ,YACxB5C,KAAK8C,iB,gCAmCT,WACE9C,KAAKS,SAAS,CACZmC,OAAQ,YAEV5C,KAAK8C,gB,oBAeP,WACE,MAAiD9C,KAAKM,MAA9CsC,EAAR,EAAQA,OAAQjE,EAAhB,EAAgBA,OAAQkE,EAAxB,EAAwBA,MAAO9D,EAA/B,EAA+BA,cAE7BoE,EAIEnD,KAJFmD,kBACAC,EAGEpD,KAHFoD,iBACAK,EAEEzD,KAFFyD,mBACAH,EACEtD,KADFsD,kBAGF,OACE,qCACE,cAAC,EAAD,CAAWtC,SAAUmC,IADvB,IAEc,aAAXP,GACC,qCACE,cAAC,EAAD,CACEjE,OAAQA,EACRC,YAAawE,EAAiBM,KAAK1D,QAEpCrB,EAAOgF,OAAS,GACf,cAAC,EAAD,CAAQ3E,QAASyE,EAAmBC,KAAK1D,WAInC,YAAX4C,GAAwB,cAAC,EAAD,IACxB7D,GACC,cAAC,EAAD,CACEA,cAAeA,EACfU,aAAc6D,IAGN,aAAXV,GAAyB,4BAAIC,IAC9B,cAAC,IAAD,CAAgBe,UAAW,IAAMC,SAAS,sB,GApGhCzD,aA0GHuC,I,YC/GfmB,IAASC,OAAO,cAAC,EAAD,IAAS7E,SAAS8E,eAAe,U,kBCLjDhG,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,sC","file":"static/js/main.e25eb67e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__O6kte\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__oM06J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2UTcp\",\"Modal\":\"Modal_Modal__10Upe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1YmtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__wQr66\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spiner\":\"Loader_spiner__2P9eN\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags }) => {\r\n  return (\r\n    <>\r\n      <img src={webformatURL} alt={tags} className={c.ImageGalleryItemImage} />\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onOpenModal }) => {\r\n  return (\r\n    <ul className={c.ImageGallery}>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <li\r\n          key={id}\r\n          className={c.ImageGalleryItem}\r\n          onClick={() => {\r\n            onOpenModal(largeImageURL);\r\n          }}\r\n        >\r\n          <ImageGalleryItem webformatURL={webformatURL} tags={tags} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onCloseModal: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={c.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={c.Modal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport c from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    keyword: '',\r\n  };\r\n\r\n  inputHandler = event => {\r\n    this.setState({\r\n      keyword: event.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { props, state } = this;\r\n\r\n    e.preventDefault();\r\n\r\n    if (state.keyword.trim() === '') {\r\n      return toast('Введите запрос');\r\n    }\r\n\r\n    props.onSubmit(state);\r\n\r\n    this.setState({ keyword: '' });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, inputHandler } = this;\r\n    const { keyword } = this.state;\r\n    return (\r\n      <>\r\n        <header className={c.Searchbar}>\r\n          <form className={c.SearchForm} onSubmit={handleSubmit}>\r\n            <button type=\"submit\" className={c.SearchFormButton}>\r\n              <span className={c.SearchFormButtonLabel}>Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className={c.SearchFormInput}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              onChange={inputHandler}\r\n              value={keyword}\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","function fetchImagesAPI(keyword, page) {\n  const API_KEY = '24760517-308a82b19588512bdc36b5eaa';\n  const URL = `https://pixabay.com/api/?q=${keyword}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return fetch(URL).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`Картинок по запросу ${keyword} не найдено`),\n    );\n  });\n}\n\nexport default fetchImagesAPI;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport c from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={onClick} className={c.Button}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Spiner from 'react-loader-spinner';\r\nimport c from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={c.spiner}>\r\n      <Spiner type=\"BallTriangle\" color=\"#00BFFF\" height={50} width={50} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ImageGallery from './ImageGallery';\nimport Modal from './Modal';\nimport Searchbar from './Searchbar';\nimport fetchImagesAPI from '../js/fetchAPI';\nimport Button from './Button/';\nimport Loader from './Loader';\n\nclass App extends Component {\n  state = {\n    keyword: '',\n    status: 'idle',\n    images: [],\n    error: null,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.keyword;\n    const nextName = this.state.keyword;\n\n    if (prevName !== nextName) {\n      this.setState({ status: 'pending' });\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { keyword, page } = this.state;\n\n    fetchImagesAPI(keyword, page)\n      .then(answer => {\n        if (answer.total === 0) {\n          this.setState({\n            error: `Картинки по запросу ${keyword} не найдены`,\n            status: 'rejected',\n          });\n        } else {\n          this.setState(({ images, page, keyword }) => ({\n            images: [...images, ...answer.hits],\n            status: 'resolved',\n            page: page + 1,\n            keyword,\n          }));\n        }\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  formSubmitHandler = ({ keyword }) => {\n    this.setState({\n      keyword,\n      page: 1,\n      error: null,\n      images: [],\n    });\n  };\n\n  handlerLoadMoreBtn() {\n    this.setState({\n      status: 'pending',\n    });\n    this.fetchImages();\n  }\n\n  handlerOpenModal = URLImageLarge => {\n    this.setState({\n      largeImageURL: URLImageLarge,\n    });\n  };\n\n  handlerCloseModal = () => {\n    this.setState({\n      largeImageURL: '',\n    });\n  };\n\n  render() {\n    const { status, images, error, largeImageURL } = this.state;\n    const {\n      formSubmitHandler,\n      handlerOpenModal,\n      handlerLoadMoreBtn,\n      handlerCloseModal,\n    } = this;\n\n    return (\n      <>\n        <Searchbar onSubmit={formSubmitHandler} />;\n        {status === 'resolved' && (\n          <>\n            <ImageGallery\n              images={images}\n              onOpenModal={handlerOpenModal.bind(this)}\n            />\n            {images.length > 0 && (\n              <Button onClick={handlerLoadMoreBtn.bind(this)} />\n            )}\n          </>\n        )}\n        {status === 'pending' && <Loader />}\n        {largeImageURL && (\n          <Modal\n            largeImageURL={largeImageURL}\n            onCloseModal={handlerCloseModal}\n          />\n        )}\n        {status === 'rejected' && <p>{error}</p>}\n        <ToastContainer autoClose={3000} position=\"top-center\" />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './styles/main.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__gSb5n\",\"SearchForm\":\"Searchbar_SearchForm__2boPP\",\"SearchFormButton\":\"Searchbar_SearchFormButton__25Hju\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1lhxJ\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1FU9u\"};"],"sourceRoot":""}